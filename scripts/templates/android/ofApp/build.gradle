plugins {
    id 'com.android.application'
}

def CMAKELIST_PATH = './src/main/cpp'
def CPP_SOURCE = './src/main/cpp'
def JAVA_SOURCE = './src/main/java'

// pointing to cmake's source code for the same project
def PRJ_SRC_ROOT = './src/main'
def ofRoot(){ return '../../../../' }
final ofSource = ofRoot() + 'libs/openFrameworks'
final ofLibs = ofRoot() + 'libs'
final addons = ofRoot() + 'addons'
final ofLibOutput = ofRoot() + 'libs/openFrameworksCompiled/lib/android'
def OFX_ANDROID = ofRoot() + 'addons/ofxAndroid'
def OF_ADDONS_ARGUMENTS = "${OF_ADDONS}"
def enableProguardInReleaseBuilds = true
def enableProguardInDebugBuilds = false

task wrapper(type: Wrapper) {
    gradleVersion = '7.3.3'
}
tasks.register("prepareKotlinBuildScriptModel"){
}

android {
    compileSdkVersion 32
    buildToolsVersion '32.0.0'
    //ndkPath "/Users/x/android-ndk-r21e"  // Point to your own NDK if needed
    ndkVersion '23.1.7779620' // use android studio side loaded ndk
    buildFeatures {
        prefab true
    }
    signingConfigs {
        debug {
        }
        release {
        }
    }
    defaultConfig {
        applicationId "cc.openframeworks.template"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 12
        versionName '12.0'
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'

        externalNativeBuild {
            if (!project.hasProperty("ndkBuild")) {
                cmake {
                    arguments "-DANDROID_STL=c++_shared",
                            "-DANDROID_ARM_NEON=TRUE",
                            "-DANDROID_TOOLCHAIN=clang",
                            "${OF_ADDONS_ARGUMENTS}",
                            "-DTARGET_OPENGLES=TRUE"

                    version '3.22.1'
                }
            }
        }
        multiDexEnabled false
    }
    buildTypes {
        release {
            jniDebuggable false
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            jniDebuggable true
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "version"
    productFlavors {
        playstore {
            applicationIdSuffix ""
            signingConfig signingConfigs.release
        }
        humble {
            applicationIdSuffix ".humble"
        }
        amazon {
            applicationIdSuffix ".amazon"
        }
        samsung {
            applicationIdSuffix ".samsung"
        }
        huawei {
            applicationIdSuffix ".huawei"
        }
        oppo {
            applicationIdSuffix ".oppo"
        }
    }
    sourceSets {
        main {
            manifest.srcFile "${PRJ_SRC_ROOT}/AndroidManifest.xml"
            java.srcDirs = ["${PRJ_SRC_ROOT}/java",
                            "${OFX_ANDROID}/Java"]
            res.srcDirs = ["${PRJ_SRC_ROOT}/res"]
//          jniLibs.srcDirs = ["${OF_ANDROID_OUTPUT}", "lib"] // Pre Android Studio 2022.2.1
            assets {
                srcDirs 'src/main/assets', '../bin/data'
            }
        }
    }
    externalNativeBuild {
        if (!project.hasProperty("ndkBuild")) {
            cmake {
                path "${CMAKELIST_PATH}/CMakeLists.txt"
            }
        } else {
            ndkBuild {
                path "${CMAKELIST_PATH}/Android.mk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    androidResources {
        noCompress ''
    }
    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
//    testOptions {
//        devices {
//            pixel2api29 (com.android.build.api.dsl.ManagedVirtualDevice) {
//                // Use device profiles you typically see in
//                // Android Studio
//                device = "Pixel 2"
//                apiLevel = 29
//                // You can also specify "aosp" if you donâ€™t require
//                // Google Play Services.
//                systemImageSource = "google"
//                abi = "x86"
//            }
//        }
//    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.getkeepsafe.relinker:relinker:1.4.4"
    implementation 'com.google.oboe:oboe:1.6.1'
    implementation 'com.google.android.material:material:1.6.0-alpha01'
    implementation "androidx.media:media:1.4.3"
    if (project.hasProperty("googleplay")) {
        implementation "com.google.android.gms:play-services-games:22.0.1"
        implementation "com.google.android.gms:play-services-auth:20.0.1"
        implementation "com.google.android.gms:play-services-base:18.0.1"
        implementation "com.google.android.gms:play-services-basement:18.0.0"
        implementation "com.google.android.gms:play-services-instantapps:18.0.1"
        implementation "com.google.android.gms:play-services-appset:16.0.2"
    }
}

